<?xml version="1.0" encoding="utf-8"?>
<project name="Conference Calendar Application" basedir="." default="package-devoxx2011-war">

	<property file="build.properties"/>
	
	<property name="build.dir" value="${basedir}/build"/>
	<property name="server-side.dest.dir" value="${build.dir}/classes"/>
	<property name="webcontent.dir" value="${basedir}/WebContent"/>
	<property name="client-side.dest.dir" value="${webcontent.dir}/VAADIN/widgetsets"/>
	<property name="src.dir" value="${basedir}/src"/>
	<property name="lib.dir" value="${webcontent.dir}/WEB-INF/lib"/>
	<property name="build.lib.dir" value="${basedir}/build-lib"/>
	<property name="dist.dir" value="${basedir}/dist"/>
	
	<taskdef name="xmltask" classname="com.oopsconsultancy.xmltask.ant.XmlTask" classpath="${build.lib.dir}/xmltask.jar"/>
	
	<target name="clean">
		<echo>Cleaning the dist directory.</echo>
		<delete dir="dist" />	
	</target>
	
	<target name="compile-server-side">
		<echo>Compiling server-side code to ${server-side.dest.dir}.</echo>
		<mkdir dir="${server-side.dest.dir}"/>
		
		<!-- compile Java source files -->
		<javac destdir="${server-side.dest.dir}" encoding="utf-8" target="1.6">
			<src path="${src.dir}"/>
			<classpath>
				<fileset dir="${lib.dir}"/>
				<fileset dir="${build.lib.dir}"/>
			</classpath>
		</javac>
		
		<!-- copy additional files (.properties, etc) -->
		<copy todir="${server-side.dest.dir}">
			<fileset dir="${src.dir}" excludes="**/*.java"/>
		</copy>
	</target>
	
	<target name="compile-client-side" depends="compile-server-side">
		<echo>Compiling client-side code to ${client-side.dest.dir}.</echo>
		<mkdir dir="${client-side.dest.dir}"/>
		
		<!-- compile client-side with GWT compiler -->
		<java classname="com.google.gwt.dev.Compiler" failonerror="yes" fork="yes" maxmemory="256m">
			<arg value="-war"/>
			<arg value="${client-side.dest.dir}"/>
			<arg value="${widgetset}"/>
			<jvmarg value="-Xss1024k"/>
			<jvmarg value="-Djava.awt.headless=true"/>
			<classpath>
				<fileset dir="${lib.dir}"/>
				<fileset dir="${build.lib.dir}"/>
				<pathelement location="${server-side.dest.dir}"/>
				<pathelement location="${src.dir}"/>
			</classpath>
		</java>
	</target>
	
	<target name="minimize-theme">
		<echo>Minimizing CSS file ${css.src.file} -> ${css.target.file}</echo>
		<java jar="${build.lib.dir}/yuicompressor-2.4.2.jar" fork="true">
			<arg value="--line-break"/>
			<arg value="1000"/>
			
			<!-- source file -->
			<arg value="${css.src.file}"/>
			<!-- target file, replace the styles.css -->
			<arg value="-o"/>
			<arg value="${css.target.file}"/>
		</java>
	</target>

	<target name="internal-package-war" depends="clean, compile-server-side, compile-client-side">
		<!-- load the configuration for the conference -->
		<property file="${configuration.file}"/>
				
		<echo>Packaging WAR configured for ${conference.name} to ${dist.dir}.</echo>
		<mkdir dir="${dist.dir}/WebContent"/>
		<mkdir dir="${dist.dir}/WebContent/WEB-INF/classes"/>

		<copy todir="${dist.dir}/WebContent">
			<fileset dir="${webcontent.dir}"/>
		</copy>
				
		<antcall target="minimize-theme">
			<param name="css.src.file" value="${dist.dir}/WebContent/VAADIN/themes/devoxx2k10/styles.css"/>
			<param name="css.target.file" value="${dist.dir}/WebContent/VAADIN/themes/devoxx2k10/styles.css"/>
		</antcall>
		<antcall target="minimize-theme">
			<param name="css.src.file" value="${dist.dir}/WebContent/VAADIN/themes/jfokus2011/styles.css"/>
			<param name="css.target.file" value="${dist.dir}/WebContent/VAADIN/themes/jfokus2011/styles.css"/>
		</antcall>
		
		<copy todir="${dist.dir}/WebContent/WEB-INF/classes">
			<fileset dir="${server-side.dest.dir}"/>
		</copy>
		
		<!-- copy production log4j configuration to be used -->
		<copy file="${basedir}/log4j-production.properties" 
		      tofile="${dist.dir}/WebContent/WEB-INF/classes/log4j.properties"
			  overwrite="true"/>
		
		<!-- copy production configuration to be used -->
		<copy file="${configuration.file}" 
		      tofile="${dist.dir}/WebContent/WEB-INF/classes/configuration.properties"
			  overwrite="true"/>
		
		<!-- update productionMode flag on web.xml -->
		<echo>Setting productionMode parameter to ${productionMode}.</echo>
		<xmltask source="${dist.dir}/WebContent/WEB-INF/web.xml" dest="${dist.dir}/WebContent/WEB-INF/web.xml" encoding="utf-8">
			<replace path="/:web-app/:context-param[:param-name='productionMode']/:param-value/text()" withText="${productionMode}"/>
		</xmltask>
		
		<war destfile="${dist.dir}/conference-calendar.war" basedir="${dist.dir}/WebContent"/>
	</target>
	
	<target name="package-devoxx2010-war">
		<antcall target="internal-package-war">
			<param name="configuration.file" value="${basedir}/devoxx2010.properties"/>
		</antcall>
	</target>
	
	<target name="package-devoxx2011-war">
		<antcall target="internal-package-war">
			<param name="configuration.file" value="${basedir}/devoxx2011.properties"/>
		</antcall>
	</target>
	
	<target name="package-jfokus2011-war">
		<antcall target="internal-package-war">
			<param name="configuration.file" value="${basedir}/jfokus2011.properties"/>
		</antcall>
	</target>
	
	<target name="package-jfokus2012-war">
		<antcall target="internal-package-war">
			<param name="configuration.file" value="${basedir}/jfokus2012.properties"/>
		</antcall>
	</target>
	
</project>