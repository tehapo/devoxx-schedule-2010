{"tags":[{"name":"lombok"},{"name":"JVM"},{"name":"JPA"}],"summary":"If there's too much code,\r\nand it don't look good\r\nWho you gonna call?\r\nBoilerplate busters!\r\n\r\nIn this presentation, the developers of lombok, Reinier Zwitserloot and Roel Spilker, will show the audience what lombok is about, and how you can use it to eliminate boilerplate from your java code. For example, instead of writing out common boilerplate such as getters, setters, toString, equals, and hashCode implementations, you can use lombok's @Data annotation. Lombok hooks into your compiler and IDE so that their interpretation of your source includes these methods, while you never actually see any of them in your editor. For IDEs, this means that you get all the benefits, such as auto-completion, the methods show up in your outline views, and search tools such as 'go to declaration' continue to work. While most IDEs offer a feature to generate the boilerplate, this is little help when reading the resulting code, and such code is much harder to maintain.\r\n\r\nDuring this presentation, all current lombok transformations will be showcased, including the new features that help reduce boilerplate in JPA classes. If you're lucky, we'll unveil a brand new feature and you'll be the first to see it in action!","id":400,"speakerUri":"http://cfp.devoxx.com/rest/v1/events/speakers/341","title":"Project Lombok: Boilerplate busters","speaker":"Roel Spilker","track":"Java Core (SE/EE)","experience":"SENIOR","speakers":[{"speakerUri":"http://cfp.devoxx.com/rest/v1/events/speakers/341","speaker":"Roel Spilker"},{"speakerUri":"http://cfp.devoxx.com/rest/v1/events/speakers/342","speaker":"Reinier Zwitserloot"}],"type":"Conference (1h)"}